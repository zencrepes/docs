(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{145:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return s})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return u}));var a=t(2),r=t(9),i=(t(0),t(166)),o={id:"getstarted",title:"Get Started",sidebar_label:"Get Started"},s={id:"develop/getstarted",title:"Get Started",description:"This section of the document will contain a set of instructions to quickly spin-up the stack. Those instructions have been tested on MacOS and assume you already have common development tools installed (namely Docker, node, yarn).",source:"@site/docs/develop/getstarted.md",permalink:"/docs/develop/getstarted",editUrl:"https://github.com/zencrepes/docs/tree/master/docs/docs/develop/getstarted.md",sidebar_label:"Get Started",sidebar:"someSidebar",previous:{title:"Jira Issues",permalink:"/docs/jira/issues"}},c=[{value:"Clone ZenCrepes repositories:",id:"clone-zencrepes-repositories",children:[]},{value:"Set-up Elasticsearch and Kibana",id:"set-up-elasticsearch-and-kibana",children:[]},{value:"Obtain a GitHub Token",id:"obtain-a-github-token",children:[]},{value:"Configure zindexer",id:"configure-zindexer",children:[]},{value:"Enable repositories",id:"enable-repositories",children:[]},{value:"Fetch data from GitHub",id:"fetch-data-from-github",children:[]},{value:"Start zapi",id:"start-zapi",children:[]},{value:"Start zui",id:"start-zui",children:[]},{value:"Done !",id:"done-",children:[]}],l={rightToc:c};function u(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"This section of the document will contain a set of instructions to quickly spin-up the stack. Those instructions have been tested on MacOS and assume you already have common development tools installed (namely Docker, node, yarn)."),Object(i.b)("p",null,"It will also focus primarily on GitHub for datasource."),Object(i.b)("h2",{id:"clone-zencrepes-repositories"},"Clone ZenCrepes repositories:"),Object(i.b)("p",null,"We'll first create a ",Object(i.b)("inlineCode",{parentName:"p"},"zencrepes")," folder in your home directory and clone the necessary repos"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"mkdir ~/zencrepes\ngit clone https://github.com/zencrepes/zindexer.git\ngit clone https://github.com/zencrepes/zui.git\ngit clone https://github.com/zencrepes/zapi.git\n")),Object(i.b)("h2",{id:"set-up-elasticsearch-and-kibana"},"Set-up Elasticsearch and Kibana"),Object(i.b)("p",null,"But before actually playing with ZenCreps, let's spin-up Elasticsearch and Kibana. Kibana is not needed to run ZenCrepes, but will ease debugging."),Object(i.b)("p",null,"Pull and run an Elasticsearch instance"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'docker pull docker.elastic.co/elasticsearch/elasticsearch:7.6.2\ndocker run -p 9200:9200 -p 9300:9300 -e "discovery.type=single-node" docker.elastic.co/elasticsearch/elasticsearch:7.7.0\n')),Object(i.b)("p",null,"Verify you instance is running properly by opening up a web browser and visiting ",Object(i.b)("inlineCode",{parentName:"p"},"http://127.0.0.1:9200"),", you should see a JSON payload."),Object(i.b)("p",null,"Get the container id of the Elasticsearch instance (for Kibana)"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'docker ps\nCONTAINER ID        IMAGE                                                 COMMAND                  CREATED             STATUS              PORTS                                            NAMES\nf0b5b04a2c24        docker.elastic.co/elasticsearch/elasticsearch:7.7.0   "/usr/local/bin/dock\u2026"   3 minutes ago       Up 3 minutes        0.0.0.0:9200->9200/tcp, 0.0.0.0:9300->9300/tcp   hungry_gagarin\n')),Object(i.b)("p",null,"In this example, the container ID for our Elasticsearch instance is: ",Object(i.b)("inlineCode",{parentName:"p"},"f0b5b04a2c24"),", we'll use this number to attach the kibana to."),Object(i.b)("p",null,"Pull and run a Kibana instance (note the use of the container ID ",Object(i.b)("inlineCode",{parentName:"p"},"f0b5b04a2c24"),")"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"docker pull docker.elastic.co/kibana/kibana:7.5.0\ndocker run --link f0b5b04a2c24:elasticsearch -p 5601:5601 docker.elastic.co/kibana/kibana:7.7.0\n")),Object(i.b)("p",null,"At this point, you should have a Kibana instance running, open-up your web browser and visit ",Object(i.b)("inlineCode",{parentName:"p"},"http://127.0.0.1:5601"),", click on ",Object(i.b)("inlineCode",{parentName:"p"},"Management")," on the left side, then ",Object(i.b)("inlineCode",{parentName:"p"},"Index Management"),'. You should see "No Indices to show" since we haven\'t loaded any data yet.'),Object(i.b)("h2",{id:"obtain-a-github-token"},"Obtain a GitHub Token"),Object(i.b)("p",null,"You'll need a GitHub developer token to fetch data with ",Object(i.b)("inlineCode",{parentName:"p"},"zindexer"),", follow ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"http://docs.zencrepes.io/install/prerequisites"}),"instructions on this page")," to get one (and keep it safe/secret)."),Object(i.b)("h2",{id:"configure-zindexer"},"Configure zindexer"),Object(i.b)("p",null,"Let's simply start by running zindexer for the very first time."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"cd ~/zencrepes/zindexer\n./bin/run sources -g org -o zencrepes\nInitialized configuration file with defaults in: /Users/YOURUSERNAME/.config/zindexer/config.yml\nPlease EDIT the configuration file first\n")),Object(i.b)("p",null,"It didn't fetch any data, but instead, provisioned an empty configuration, which you can then edit."),Object(i.b)("p",null,"So open-up the above mentioned configuration file (replace YOURUSERNAME). You'll only need to modify the two lines containing ",Object(i.b)("inlineCode",{parentName:"p"},"YOUR_USERNAME")," and ",Object(i.b)("inlineCode",{parentName:"p"},"YOUR_TOKEN"),"."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yml"}),"github:\n  enabled: true\n  username: YOUR_USERNAME\n  token: YOUR_TOKEN\n")),Object(i.b)("p",null,"The assumption is that you're running Elasticsearch on the ports specified above, so you can just save the modified configuration file and exit."),Object(i.b)("h2",{id:"enable-repositories"},"Enable repositories"),Object(i.b)("p",null,"Zindexer works by data source (or GitHub repositories), using the ",Object(i.b)("inlineCode",{parentName:"p"},"source")," command."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"\u279c ./bin/run sources --help\nManage data sources (GitHub or Jira)\n\nUSAGE\n  $ zindexer sources [FILE]\n\nOPTIONS\n  -a, --active                     Automatically make the new sources active by default\n  -g, --ggrab=affiliated|org|repo  [default: affiliated] If Github, Select how to fetch repositories\n  -h, --help                       show CLI help\n  -l, --load                       Load active status from status file: CONFIG_DIR/sources.yml\n  -o, --gorg=gorg                  If Github, organization login\n  -r, --grepo=grepo                If Github, repository name\n  -t, --type=JIRA|GITHUB           [default: GITHUB] Type of source (JIRA or GitHUB)\n  --envUserConf=envUserConf        User Configuration passed as an environment variable, takes precedence over config fil\n")),Object(i.b)("p",null,'As you can see this command takes a few option, but let\'s start with something simple fetch and make as "active" all repositories attached to your favorite organization (if there are many you might want to either pick a smaller org or specify individual repositories).'),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'./bin/run sources -g org -o zencrepes -a\nConfiguration file exists: /Users/YOURUSERNAME/.config/zindexer/config.yml\nStarting to fetch data from org: zencrepes\nRemaining GitHub tokens: 5000\nRemaining GitHub tokens: 5000\nLatest call contained 5 nodes, download rate: 18 nodes/s\nParams: {"orgId":"MDEyOk9yZ2FuaXphdGlvbjQ3MzU2NzU1"} -> Fetched Count / Remote Count / Query Increment: 5 / 7 / 2\nRemaining GitHub tokens: 4995\nLatest call contained 2 nodes, download rate: 8 nodes/s\nParams: {"orgId":"MDEyOk9yZ2FuaXphdGlvbjQ3MzU2NzU1"} -> Fetched Count / Remote Count / Query Increment: 7 / 7 / 0\nFetching repositories for org: zencrepes...  done\nElasticsearch Index sources does not exist, creating...  done\nGrabbing data from ElasticSearch and merging with new data...  done\nAbout to submit (create or update) data about 7 source(s) to Elasticsearch\nSubmitting data to ElasticSearch (1 / 1)...  done\nAll available sources:\nType   Name                     Active\nGITHUB zencrepes/arranger       true\nGITHUB zencrepes/docs           true\nGITHUB zencrepes/github-indexer true\nGITHUB zencrepes/zapi           true\nGITHUB zencrepes/zencrepes      true\nGITHUB zencrepes/zindexer       true\nGITHUB zencrepes/zui            true\n\nRefreshing the repositories configuration file...  done\nYou can enable/disable sources in: /Users/YOURUSERNAME/.config/zindexer/sources.yml\n')),Object(i.b)("p",null,"A couple of things to watch for here (and common to most zindexer commands):"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"The number of remaining GitHub tokens is displayed after each call, zindexer will stop if it gets to 0 (but 5000 are plentyful)"),Object(i.b)("li",{parentName:"ul"},"The download rates (in nodes/s) shows how fast nodes are being downloaded, you might have seen in the configuration file the ability to specify how many nodes to download per call (maximum is 100). This number can be tuned but you'll see that increasing the number of nodes can actually negatively impact performances.")),Object(i.b)("p",null,"You can also see that sources are saved in a dedicated yml files and can be enabled/disabled there. Simply open the file, change some flags from true to false (or the other way around), save and run the following command:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"./bin/run sources -l\nConfiguration file exists: /Users/francoisgerthoffert/.config/zindexer/config.yml\nChecking if index: sources exists...  done\nQuerying Elasticsearch...  done\nGrabbing sources configuration from file: /Users/francoisgerthoffert/.config/zindexer/sources.yml...  done\nComparing Elasticsearch data with flags in configuration file...  done\nSubmitting data to ElasticSearch (1 / 1)...  done\nAll available sources:\nType   Name                     Active\nGITHUB zencrepes/arranger       true\nGITHUB zencrepes/docs           true\nGITHUB zencrepes/github-indexer true\nGITHUB zencrepes/zapi           true\nGITHUB zencrepes/zencrepes      true\nGITHUB zencrepes/zindexer       true\nGITHUB zencrepes/zui            true\n\nRefreshing the repositories configuration file...  done\nYou can enable/disable sources in: /Users/francoisgerthoffert/.config/zindexer/sources.yml\n")),Object(i.b)("p",null,"And that's it, your sources are configured and ready to fetch some data"),Object(i.b)("h2",{id:"fetch-data-from-github"},"Fetch data from GitHub"),Object(i.b)("p",null,"Various datasets can be loaded:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"./bin/run github --help\nFetches data from GitHub\n\nUSAGE\n  $ zindexer github:COMMAND\n\nCOMMANDS\n  github:issues        Github: Fetches issues data from configured sources\n  github:labels        Github: Fetches labels attached to configured sources\n  github:milestones    Github: Fetches milestones data from configured sources\n  github:projects      Github: Fetches projects data from configured sources\n  github:pullrequests  Github: Fetches Pullrequests data from configured sources\n  github:releases      Github: Fetches releases data from configured sources\n  github:repos         Github: Fetches repos data from configured sources\n")),Object(i.b)("p",null,"For now let's fetch Pull Requests"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"./bin/run github:pullrequests\nConfiguration file exists: /Users/francoisgerthoffert/.config/zindexer/config.yml\nChecking if index: sources exists...  done\nGrabbing the active repositories from ElasticSearch...  done\nProcessing source: zencrepes/zencrepes\nChecking if index: gh_prs_ exists...  done\nRemaining GitHub tokens: 5000\nLatest call contained 5 nodes, oldest: Feb 8th 2020 download rate: 5 nodes/s\nRepo: MDEwOlJlcG9zaXRvcnkxMjM2MzM5MzY= -> Fetched Count / Remote Count / Query Increment: 5 / 107 / 30\nRemaining GitHub tokens: 4993\nRemaining GitHub tokens: 4990\nLatest call contained 12 nodes, oldest: Jan 10th 2019 download rate: 8 nodes/s\nRepo: MDEwOlJlcG9zaXRvcnkxMjM2MzM5MzY= -> Fetched Count / Remote Count / Query Increment: 107 / 107 / 0\nGrabbing pullrequests for: zencrepes/zencrepes (ID: MDEwOlJlcG9zaXRvcnkxMjM2MzM5MzY=)...  done\nElasticsearch Index gh_prs_ does not exist, creating...  done\nSubmitting data to ElasticSearch (1 / 2)...  done\nSubmitting data to ElasticSearch (2 / 2)...  done\nProcessing source: zencrepes/zindexer\nChecking if index: gh_prs_ exists...  done\nQuerying Elasticsearch...  done\nRemaining GitHub tokens: 4986\nLatest call contained 5 nodes, oldest: Mar 20th 2020 download rate: 7 nodes/s\nRepo: MDEwOlJlcG9zaXRvcnkyMjc5Mjc4MjI= -> Fetched Count / Remote Count / Query Increment: 5 / 11 / 6\nRemaining GitHub tokens: 4985\nLatest call contained 6 nodes, oldest: Dec 30th 2019 download rate: 9 nodes/s\nRepo: MDEwOlJlcG9zaXRvcnkyMjc5Mjc4MjI= -> Fetched Count / Remote Count / Query Increment: 11 / 11 / 0\nGrabbing pullrequests for: zencrepes/zindexer (ID: MDEwOlJlcG9zaXRvcnkyMjc5Mjc4MjI=)...  done\nChecking if index: gh_prs_ exists...  done\nSubmitting data to ElasticSearch (1 / 1)...  done\nElasticsearch Index config does not exist, creating...  done\nChecking if index: config exists...  done\nQuerying Elasticsearch...  done\nSubmitting data to ElasticSearch (1 / 1)...  done\n")),Object(i.b)("p",null,"If you look closely at the console output (which was truncated in the doc), you might notice that zindexer if fetch data by source, if something fails it will restart from the last repository."),Object(i.b)("p",null,"And that's it, your data is now in Elasticsearch."),Object(i.b)("h2",{id:"start-zapi"},"Start zapi"),Object(i.b)("p",null,"Open a new terminal console/tab and start zapi:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"cd ~/zencrepes/zapo\nyarn\nyarn run start:dev\n")),Object(i.b)("h2",{id:"start-zui"},"Start zui"),Object(i.b)("p",null,"Edit zui ",Object(i.b)("inlineCode",{parentName:"p"},".env")," config file to disable keycloak (the authentication/authorization server)."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"vim ~/zencrepes/zui/.env\n")),Object(i.b)("p",null,"Replace ",Object(i.b)("inlineCode",{parentName:"p"},"KEYCLOAK_DISABLED=false")," with ",Object(i.b)("inlineCode",{parentName:"p"},"KEYCLOAK_DISABLED=true")),Object(i.b)("p",null,"Save and start zui:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"cd ~/zencrepes/zui\nyarn\nyarn run start:dev\n")),Object(i.b)("h2",{id:"done-"},"Done !"),Object(i.b)("p",null,"That's it, you can now open-up your browser (starting zui should have done it for you), and visit http://localhost:3000"),Object(i.b)("p",null,"You can try loading more data."),Object(i.b)("p",null,"Zapi and zui are started in watch mode, changes you do in the code will automatically trigger a refresh of the application."))}u.isMDXComponent=!0},166:function(e,n,t){"use strict";t.d(n,"a",(function(){return d})),t.d(n,"b",(function(){return h}));var a=t(0),r=t.n(a);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=r.a.createContext({}),u=function(e){var n=r.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},d=function(e){var n=u(e.components);return r.a.createElement(l.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},p=r.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=u(t),p=a,h=d["".concat(o,".").concat(p)]||d[p]||b[p]||i;return t?r.a.createElement(h,s(s({ref:n},l),{},{components:t})):r.a.createElement(h,s({ref:n},l))}));function h(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=p;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=t[l];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,t)}p.displayName="MDXCreateElement"}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{127:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/zencrepes-dev-github-settings-4996038f8563ac57f575f3cdbb5dd5ac.png"},128:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/github-dev-settings-66128413827ebf915812f0476c182755.png"},129:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/github-org-webhook-e51d339fd865f0cb627297b6b5faf528.png"},66:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return r})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return d}));var o=n(2),i=(n(0),n(92));const a={id:"try",title:"Try ZenCrepes self-hosted",sidebar_label:"Try It !"},r={unversionedId:"try",id:"try",isDocsHomePage:!1,title:"Try ZenCrepes self-hosted",description:"This section of the documentation contains instructions to get started quickly with ZenCrepes self-hosted (see Introduction for more details) using docker and docker-compose. This doesn't aim at providing instructions to install a production-grade environment, but to take the shortest path to a running ZenCrepes environment.",source:"@site/docs/try.md",slug:"/try",permalink:"/docs/try",editUrl:"https://github.com/zencrepes/docs/tree/master/docs/docs/try.md",version:"current",sidebar_label:"Try It !",sidebar:"someSidebar",previous:{title:"Features",permalink:"/docs/features"},next:{title:"FAQ",permalink:"/docs/faq"}},c=[{value:"Pre-requisites",id:"pre-requisites",children:[]},{value:"GitHub Configuration",id:"github-configuration",children:[{value:"Obtain a GitHub developer token",id:"obtain-a-github-developer-token",children:[]},{value:"Register a WebHook",id:"register-a-webhook",children:[]}]},{value:"Clone the docker repo",id:"clone-the-docker-repo",children:[]},{value:"Configure ZenCrepes",id:"configure-zencrepes",children:[]},{value:"Configure ZenCrepes",id:"configure-zencrepes-1",children:[]},{value:"Start the environment",id:"start-the-environment",children:[]},{value:"Enable repositories",id:"enable-repositories",children:[]},{value:"Fetch data",id:"fetch-data",children:[]},{value:"Important notes",id:"important-notes",children:[]},{value:"Using Keycloak",id:"using-keycloak",children:[]}],l=(s="Note",function(e){return console.warn("Component "+s+" was not imported, exported, or provided by MDXProvider as global scope"),Object(i.b)("div",e)});var s;const b={rightToc:c};function d({components:e,...t}){return Object(i.b)("wrapper",Object(o.a)({},b,t,{components:e,mdxType:"MDXLayout"}),Object(i.b)("p",null,"This section of the documentation contains instructions to get started quickly with ZenCrepes self-hosted (see Introduction for more details) using ",Object(i.b)("inlineCode",{parentName:"p"},"docker")," and ",Object(i.b)("inlineCode",{parentName:"p"},"docker-compose"),". This doesn't aim at providing instructions to install a production-grade environment, but to take the shortest path to a running ZenCrepes environment."),Object(i.b)("p",null,"This documentation has been tested on Mac, instructions should be identical on GNU/Linux."),Object(i.b)("h2",{id:"pre-requisites"},"Pre-requisites"),Object(i.b)("p",null,"The following elements are needed to follow this page:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Docker and Docker-compose"),Object(i.b)("li",{parentName:"ul"},"A publicly reachable host (for the Webhook configuration)")),Object(i.b)("h2",{id:"github-configuration"},"GitHub Configuration"),Object(i.b)("h3",{id:"obtain-a-github-developer-token"},"Obtain a GitHub developer token"),Object(i.b)("p",null,"Log-in your profile in GitHub, and go to your settings."),Object(i.b)("p",null,Object(i.b)("img",{src:n(127).default})),Object(i.b)("p",null,"In the left-side menu, click on ",Object(i.b)("inlineCode",{parentName:"p"},"Developer settings")," at the bottom."),Object(i.b)("p",null,"Then select ",Object(i.b)("inlineCode",{parentName:"p"},"Personal access tokens")," and ",Object(i.b)("inlineCode",{parentName:"p"},"Generate new token"),"."),Object(i.b)("p",null,Object(i.b)("img",{src:n(128).default})),Object(i.b)("p",null,"Give your token a name, and select the following scopes:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"repo"),Object(i.b)("li",{parentName:"ul"},"admin:org")),Object(i.b)("p",null,"Those scopes should be sufficient to get started, click on ",Object(i.b)("inlineCode",{parentName:"p"},"Generate token")," and keep this token safe (don't share it!)."),Object(i.b)("h3",{id:"register-a-webhook"},"Register a WebHook"),Object(i.b)("p",null,"The next thing is you need to to register a WebHook, it will be used to receive events on your organization (or on individual repositories)."),Object(i.b)("p",null,"Go to your organization (or repo settings) and click on ",Object(i.b)("inlineCode",{parentName:"p"},"Webhooks")),Object(i.b)("p",null,Object(i.b)("img",{src:n(129).default})),Object(i.b)("p",null,"Then click on ",Object(i.b)("inlineCode",{parentName:"p"},"Add Webhook"),", and enter the following settings:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Payload URL"),": The zqueue host that will be listening to the events, for simplicity's sake and in the context of this guide we're going to expose port 3003, on the assumption you do not configure SSL (don't do that for production), you'd just have to enter: ",Object(i.b)("inlineCode",{parentName:"li"},"http://YOUR_DOMAIN_OR_IP:3003/github/webhook"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Content type"),": Select ",Object(i.b)("inlineCode",{parentName:"li"},"application/json"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Secret"),": Enter a secret and keep it safe, it will be used by zqueue to verify incoming events."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Which events..."),": Select the events you'd like to receive, you can select ",Object(i.b)("inlineCode",{parentName:"li"},"Send me everything")," for the purpose of getting started quickly."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Active"),": Unselect this box until the environment is running (the last step of this guide).")),Object(i.b)("h2",{id:"clone-the-docker-repo"},"Clone the docker repo"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-bash"}),"mkdir ~/zencrepes\ncd ~/zencrepes\ngit clone git@github.com:zencrepes/docker.git\ncd docker\nmkdir /tmp/zencrepes-data\n")),Object(i.b)("p",null,"PS: ",Object(i.b)("inlineCode",{parentName:"p"},"/tmp/zencrepes-data")," is where the configuration file and cache data will be stored, if you whish to use a different directory, you'll need to update the ",Object(i.b)("inlineCode",{parentName:"p"},"docker-compose.yml")," file."),Object(i.b)("h2",{id:"configure-zencrepes"},"Configure ZenCrepes"),Object(i.b)("p",null,"The next thing you need to do is to configure ZenCrepes, a template configuration can be obtained easily by starting either ",Object(i.b)("inlineCode",{parentName:"p"},"zindexer"),", ",Object(i.b)("inlineCode",{parentName:"p"},"zapi")," or ",Object(i.b)("inlineCode",{parentName:"p"},"zqueue"),". At startup those tools will look for a configuration file, and if they can't find any, will generate a default one and terminate themselves."),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-bash"}),"docker run \\\n  -it \\\n  --name zapi \\\n  --env CONFIG_PATH=/root/zencrepes \\\n  --mount type=bind,source=/tmp/zencrepes-data,target=/root/zencrepes \\\n  zencrepes/zqueue:latest\n")),Object(i.b)("p",null,"You'll see an error message similar to the below and your container will stop."),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{}),"$ node dist/main.js\n[Nest] 63   - 06/08/2020, 1:56:15 AM   [NestFactory] Starting Nest application...\n[Nest] 63   - 06/08/2020, 1:56:15 AM   [ConfService] Initialized configuration file with defaults in: /root/zencrepes/config.yml +88ms\n[Nest] 63   - 06/08/2020, 1:56:15 AM   [ConfService] Please EDIT the configuration file first +0ms\nerror Command failed with exit code 1.\n")),Object(i.b)("p",null,"A default configuration file (config.yml) is now located in ",Object(i.b)("inlineCode",{parentName:"p"},"/tmp/zencrepes-data"),". Note that the path defailed in the logs above (",Object(i.b)("inlineCode",{parentName:"p"},"/root/zencrepes/config.yml"),") refers to the container's filesystem, so use your local mount point (",Object(i.b)("inlineCode",{parentName:"p"},"/tmp/zencrepes-data/config.yml"),")."),Object(i.b)("h2",{id:"configure-zencrepes-1"},"Configure ZenCrepes"),Object(i.b)("p",null,"Open-up ",Object(i.b)("inlineCode",{parentName:"p"},"/tmp/zencrepes-data/config.yml"),", and modify the following elements:"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-yml"}),"elasticsearch:\n  host: 'http://zc_elasticsearch:9200'\nredis:\n  host: 'redis://zc_redis:6379'\ngithub:\n  username: YOUR_GITHUB_USERNAME\n  token: THE_TOKEN_YOU_GOT_AT_THE_BEGINNING_OF_THIS_DOC\n  webhook:\n    secret: THE_SECRET_CONFIGURED_IN_THE_WEBHOOK_SECTION\n")),Object(i.b)("p",null,"For the elasticsearch host, use ",Object(i.b)("inlineCode",{parentName:"p"},"http://zc_elasticsearch:9200")," as this corresponds to the setup with docker-compose, same applies for redis. Leave all the other settings as-is."),Object(i.b)("h2",{id:"start-the-environment"},"Start the environment"),Object(i.b)("p",null,"Simply pull the latest version of all of the images and start the environment."),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-bash"}),"docker-compose pull\ndocker-compose up -d\n")),Object(i.b)("p",null,"ZenCrepes is now available at ",Object(i.b)("inlineCode",{parentName:"p"},"http://localhost:3000")," but hasn't been configured yet ! At that point you should be able to access it, but the left-side menu will be mostly empty."),Object(i.b)("h2",{id:"enable-repositories"},"Enable repositories"),Object(i.b)("p",null,"To facilite discovery (and limit dependencies to external tools), zindexer (which is a CLI tool) has been dockerized, and a small (hugly?) ",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/zencrepes/zindexer/blob/master/startup.sh"}),"hack")," was done to ensure this process doesn't shut down after initial execution, keeping the Docker container alive. This will allow you to interact with the command tool without needing to have node and npm running on your machine."),Object(i.b)("p",null,"The first step is to identify repositories to load data from (those are called ",Object(i.b)("inlineCode",{parentName:"p"},"sources")," in ZenCrepes)."),Object(i.b)("p",null,"Run the following command:"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-bash"}),"docker exec -it zc_zindexer zindexer sources --help\n")),Object(i.b)("p",null,"This gives view a quick view at the available commands, which ultimately define what data will be fetched."),Object(i.b)(l,{type:"tip",mdxType:"Note"},"Yes, there needs to be two `zindexer` in the command above, the first one is the docker container name, while the second one is the command to run within that container."),Object(i.b)("p",null,"To get started quickly, with as much data as possible, run the following command:"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-bash"}),"docker exec -it zc_zindexer zindexer sources -a -g affiliated\n")),Object(i.b)("p",null,"This will enable all repositories from all GitHub organizations affiliated with your account. But be careful, it could represent a lot of data !"),Object(i.b)("h2",{id:"fetch-data"},"Fetch data"),Object(i.b)("p",null,"ZenCrepes can fetch various different datasets from GitHub, you can get a list of the available datasets by running the following command"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-bash"}),"docker exec -it zc_zindexer zindexer github --help\n")),Object(i.b)("p",null,"You can then fetch the data of your choice (or all of it) using the commands below:"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-bash"}),"docker exec -it zc_zindexer zindexer github:issues\ndocker exec -it zc_zindexer zindexer github:labels\ndocker exec -it zc_zindexer zindexer github:milestones\ndocker exec -it zc_zindexer zindexer github:projects\ndocker exec -it zc_zindexer zindexer github:pullrequests\ndocker exec -it zc_zindexer zindexer github:releases\ndocker exec -it zc_zindexer zindexer github:repos\ndocker exec -it zc_zindexer zindexer github:stargazers\ndocker exec -it zc_zindexer zindexer github:vulnerabilities\ndocker exec -it zc_zindexer zindexer github:watchers\n")),Object(i.b)("p",null,"Data is fetched per repository, once a repository has been fully loaded its data becomes available in ZenCrepes. So if you are fetching a lot of data, you don't need to wait until the end to start playing with the tool."),Object(i.b)("h2",{id:"important-notes"},"Important notes"),Object(i.b)("p",null,"Authentication/Authorization is not enabled, so pay attention to where you are spinning up this environment."),Object(i.b)("p",null,"Don't run zindexer multiple times in parallel with the same token (or username for that matter). If you do that you will hit GitHub rate throttling. On top of that, it's in everyone best interest to play gently with GitHub API."),Object(i.b)("p",null,"GitHub will issue 5000 tokens per 1-hour period, which should be plenty for most discovery situations. You can monitor token consumption while ",Object(i.b)("inlineCode",{parentName:"p"},"zindexer")," is running, by watching for the following messages:"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{}),"GitHub Tokens - remaining: 3724 query cost: 1 (token will reset at: 2020-04-29T04:18:44Z)\n")),Object(i.b)("p",null,"ZenCrepes will pause data loading, until token reset, if you do consume all tokens."),Object(i.b)("p",null,"If you re-run the command later on, ",Object(i.b)("inlineCode",{parentName:"p"},"zindexer")," will only fetch newly updated PRs."),Object(i.b)("p",null,"On the long-run, ",Object(i.b)("inlineCode",{parentName:"p"},"zindexer")," will only be useful for the initial data fetching (historical data). another tool ",Object(i.b)("inlineCode",{parentName:"p"},"zqueue")," (not built yet), will take care of fetching data based on events it will receive from GitHub. ",Object(i.b)("inlineCode",{parentName:"p"},"zindexer")," is only needed to fetch data, it doesn't need to be running constantly."),Object(i.b)("p",null,"That's it, happy discovery !"),Object(i.b)("h2",{id:"using-keycloak"},"Using Keycloak"),Object(i.b)("p",null,"ZenCrepes can be configured to use Keycloak to provide an authorization layer, this is required if you want to use any of the features directly interacting with GitHub (for example bulk modifying labels)."),Object(i.b)("p",null,"To start the ZenCrepes docker environment with Keycloak enabled, simply run:"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-bash"}),"docker-compose -f docker-compose-keycloak.yml up -d\n")),Object(i.b)("p",null,"And follow configuration instructions available in the ",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"https://docs.zencrepes.io/docs/install/authentication"}),"dedicated section on Authentication & Authorization"),", not running the container manually since it is provided by ",Object(i.b)("inlineCode",{parentName:"p"},"docker-compose-keycloak.yml"),"."),Object(i.b)("p",null,"Keycloak configuration is a bit peculiar as it needs to be reachable from both your webbrowser (for the redirection from GitHub) and directly from the API, through the ",Object(i.b)("inlineCode",{parentName:"p"},"KEYCLOAK_AUTH_SERVER_URL")," parameter."),Object(i.b)("p",null,"And if those two are not using the same URL, you are going to see the following error ",Object(i.b)("inlineCode",{parentName:"p"},'{"message":"jwt issuer invalid. expected: http://zc_keycloak:8080/auth/realms/ZenCrepes"}')," when trying to access the API."),Object(i.b)("p",null,"The easy solution for this is to edit your local ",Object(i.b)("inlineCode",{parentName:"p"},"/etc/hosts")," file, to create an alias for zc_keycloak."),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-bash"}),"##\n# Host Database\n#\n# localhost is used to configure the loopback interface\n# when the system is booting.  Do not change this entry.\n##\n127.0.0.1       localhost\n127.0.0.1       zc_keycloak\n")),Object(i.b)("p",null,"Then edit your github OAuth configuration (which you did when following the Authz configuration above), replacing ",Object(i.b)("inlineCode",{parentName:"p"},"localhost")," with ",Object(i.b)("inlineCode",{parentName:"p"},"zc_keycloak")," in both ",Object(i.b)("inlineCode",{parentName:"p"},"Homepage URL")," and ",Object(i.b)("inlineCode",{parentName:"p"},"Authorization callback URL"),"."),Object(i.b)("p",null,"In production, Keycloak would be hosted properly and have its own URL, which will make this configuration tweak not needed."))}d.isMDXComponent=!0},92:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return h}));var o=n(0),i=n.n(o);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=i.a.createContext({}),b=function(e){var t=i.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=b(e.components);return i.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},p=i.a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,r=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=b(n),p=o,h=d["".concat(r,".").concat(p)]||d[p]||u[p]||a;return n?i.a.createElement(h,c(c({ref:t},s),{},{components:n})):i.a.createElement(h,c({ref:t},s))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,r=new Array(a);r[0]=p;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,r[1]=c;for(var s=2;s<a;s++)r[s]=n[s];return i.a.createElement.apply(null,r)}return i.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"}}]);
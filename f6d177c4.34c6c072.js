(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{91:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return i})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return u}));var r=t(2),s=t(6),a=(t(0),t(95)),o={id:"perfs",title:"Testing Perfs",sidebar_label:"Perfs"},i={unversionedId:"tests/perfs",id:"tests/perfs",isDocsHomePage:!1,title:"Testing Perfs",description:"This new dataset aims at recording performance tests runs and facilitate their analysis.",source:"@site/docs/tests/perfs.md",slug:"/tests/perfs",permalink:"/docs/tests/perfs",editUrl:"https://github.com/zencrepes/docs/tree/master/docs/docs/tests/perfs.md",version:"current",sidebar_label:"Perfs",sidebar:"someSidebar",previous:{title:"Testing States",permalink:"/docs/tests/states"},next:{title:"Get Started",permalink:"/docs/develop/getstarted"}},c=[],p={rightToc:c};function u(e){var n=e.components,t=Object(s.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"This new dataset aims at recording performance tests runs and facilitate their analysis."),Object(a.b)("p",null,"It will receive (usually from your CI/CD platform) test runs status and ZenCrepes will then display this data in context. "),Object(a.b)("p",null,'This dataset has been designed around identifying load breaking points ("How much can I load my system before it starts erroring out?"). A single performance test report is therefore composed of multiple runs, each with a different user count. The target run platform is Apache JMeter'),Object(a.b)("p",null,"The payload for a testing perf event is as follow:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-json"}),'{\n  "name": "Name of the run",\n  "rampUp": 30,\n  "startedAt": "2021-10-01T18:30:01.001Z",\n  "duration": 1200,\n  // Repository containing the testing codebase\n  "repository": { \n      "name": "perf",\n      "url": "https://github.com/zencrepes/perf",\n      "owner": {\n          "login": "zencrepes",\n          "url": "https://github.com/zencrepes"\n      }\n  },\n  // The platform where the tests were executed\n  "platform": { \n      "vendor": "AWS",\n      "tenant": "zencrepes",\n      "region": "us-east-2"\n  },\n  // An array of runs \n  "runs": [{\n      "name": "200 Users - RampUp 30",\n      "rampUp": 30,\n      "userCount": 200,\n      // Direct output (as-is) of the statistics.json file generated\n      // by JMeter. Note that a "Total" transaction is needed\n      // for zencrepes UI/API (displayed by default)\n      // The statistics object will be converted into an array by zqueue\n      "statistics": {\n          "Transaction A" : {\n            "transaction" : "Transaction A",\n            "sampleCount" : 800,\n            "errorCount" : 0,\n            "errorPct" : 0.0,\n            "meanResTime" : 481.8874999999999,\n            "medianResTime" : 406.5,\n            "minResTime" : 25.0,\n            "maxResTime" : 1566.0,\n            "pct1ResTime" : 1165.2999999999997,\n            "pct2ResTime" : 1319.6999999999996,\n            "pct3ResTime" : 1478.97,\n            "throughput" : 15.843152787404692,\n            "receivedKBytesPerSec" : 21.05715912466581,\n            "sentKBytesPerSec" : 86.78148826616497\n          },\n          "Total" : {\n            "transaction" : "Total",\n            "sampleCount" : 6800,\n            "errorCount" : 0,\n            "errorPct" : 0.0,\n            "meanResTime" : 307.7454411764701,\n            "medianResTime" : 183.0,\n            "minResTime" : 4.0,\n            "maxResTime" : 1582.0,\n            "pct1ResTime" : 735.9000000000005,\n            "pct2ResTime" : 947.8999999999996,\n            "pct3ResTime" : 1382.9799999999996,\n            "throughput" : 124.91045022869635,\n            "receivedKBytesPerSec" : 133.73347060471355,\n            "sentKBytesPerSec" : 428.5975472547255\n          },\n        }\n  }, {\n      "name": "300 Users - RampUp 30",\n      "rampUp": 30,\n      "userCount": 300,\n      "statistics": {\n          "Transaction A" : {\n            "transaction" : "Transaction A",\n            "sampleCount" : 1200,\n            "errorCount" : 0,\n            "errorPct" : 0.0,\n            "meanResTime" : 746.6841666666661,\n            "medianResTime" : 694.0,\n            "minResTime" : 24.0,\n            "maxResTime" : 1790.0,\n            "pct1ResTime" : 1541.6000000000004,\n            "pct2ResTime" : 1665.95,\n            "pct3ResTime" : 1740.97,\n            "throughput" : 20.96655833944858,\n            "receivedKBytesPerSec" : 27.86668544920851,\n            "sentKBytesPerSec" : 114.84514231051473\n          },\n          "Total" : {\n            "transaction" : "Total",\n            "sampleCount" : 10200,\n            "errorCount" : 0,\n            "errorPct" : 0.0,\n            "meanResTime" : 476.80019607842905,\n            "medianResTime" : 331.0,\n            "minResTime" : 3.0,\n            "maxResTime" : 1822.0,\n            "pct1ResTime" : 1187.0,\n            "pct2ResTime" : 1414.0,\n            "pct3ResTime" : 1700.0,\n            "throughput" : 168.2446475109689,\n            "receivedKBytesPerSec" : 180.13233802329034,\n            "sentKBytesPerSec" : 577.2875138142051\n          },\n      }\n  }],\n  "url": "An URL back to the execution platform",\n}\n')))}u.isMDXComponent=!0},95:function(e,n,t){"use strict";t.d(n,"a",(function(){return m})),t.d(n,"b",(function(){return d}));var r=t(0),s=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,s=function(e,n){if(null==e)return{};var t,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var p=s.a.createContext({}),u=function(e){var n=s.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},m=function(e){var n=u(e.components);return s.a.createElement(p.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return s.a.createElement(s.a.Fragment,{},n)}},f=s.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=u(t),f=r,d=m["".concat(o,".").concat(f)]||m[f]||l[f]||a;return t?s.a.createElement(d,i(i({ref:n},p),{},{components:t})):s.a.createElement(d,i({ref:n},p))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,o=new Array(a);o[0]=f;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var p=2;p<a;p++)o[p]=t[p];return s.a.createElement.apply(null,o)}return s.a.createElement.apply(null,t)}f.displayName="MDXCreateElement"}}]);